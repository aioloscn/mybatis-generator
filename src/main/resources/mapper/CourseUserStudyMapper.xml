<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiolos.news.dao.CourseUserStudyMapper">
  <resultMap id="BaseResultMap" type="com.aiolos.news.pojo.CourseUserStudy">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="status_id" jdbcType="TINYINT" property="statusId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="user_no" jdbcType="BIGINT" property="userNo" />
    <result column="chapter_video_total" jdbcType="INTEGER" property="chapterVideoTotal" />
    <result column="chapter_video_seen" jdbcType="INTEGER" property="chapterVideoSeen" />
    <result column="course_type" jdbcType="TINYINT" property="courseType" />
    <result column="watch_progress" jdbcType="CHAR" property="watchProgress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, status_id, sort, course_id, user_no, chapter_video_total, 
    chapter_video_seen, course_type, watch_progress
  </sql>
  <select id="selectByExample" parameterType="com.aiolos.news.pojo.CourseUserStudyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_user_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_user_study
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_user_study
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiolos.news.pojo.CourseUserStudyExample">
    delete from course_user_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiolos.news.pojo.CourseUserStudy">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_user_study (id, gmt_create, gmt_modified, 
      status_id, sort, course_id, 
      user_no, chapter_video_total, chapter_video_seen, 
      course_type, watch_progress)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{statusId,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{courseId,jdbcType=BIGINT}, 
      #{userNo,jdbcType=BIGINT}, #{chapterVideoTotal,jdbcType=INTEGER}, #{chapterVideoSeen,jdbcType=INTEGER}, 
      #{courseType,jdbcType=TINYINT}, #{watchProgress,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aiolos.news.pojo.CourseUserStudy">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_user_study
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="chapterVideoTotal != null">
        chapter_video_total,
      </if>
      <if test="chapterVideoSeen != null">
        chapter_video_seen,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="watchProgress != null">
        watch_progress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=BIGINT},
      </if>
      <if test="chapterVideoTotal != null">
        #{chapterVideoTotal,jdbcType=INTEGER},
      </if>
      <if test="chapterVideoSeen != null">
        #{chapterVideoSeen,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=TINYINT},
      </if>
      <if test="watchProgress != null">
        #{watchProgress,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiolos.news.pojo.CourseUserStudyExample" resultType="java.lang.Long">
    select count(*) from course_user_study
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_user_study
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=BIGINT},
      </if>
      <if test="record.chapterVideoTotal != null">
        chapter_video_total = #{record.chapterVideoTotal,jdbcType=INTEGER},
      </if>
      <if test="record.chapterVideoSeen != null">
        chapter_video_seen = #{record.chapterVideoSeen,jdbcType=INTEGER},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=TINYINT},
      </if>
      <if test="record.watchProgress != null">
        watch_progress = #{record.watchProgress,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_user_study
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      status_id = #{record.statusId,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=BIGINT},
      user_no = #{record.userNo,jdbcType=BIGINT},
      chapter_video_total = #{record.chapterVideoTotal,jdbcType=INTEGER},
      chapter_video_seen = #{record.chapterVideoSeen,jdbcType=INTEGER},
      course_type = #{record.courseType,jdbcType=TINYINT},
      watch_progress = #{record.watchProgress,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiolos.news.pojo.CourseUserStudy">
    update course_user_study
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=BIGINT},
      </if>
      <if test="chapterVideoTotal != null">
        chapter_video_total = #{chapterVideoTotal,jdbcType=INTEGER},
      </if>
      <if test="chapterVideoSeen != null">
        chapter_video_seen = #{chapterVideoSeen,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=TINYINT},
      </if>
      <if test="watchProgress != null">
        watch_progress = #{watchProgress,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiolos.news.pojo.CourseUserStudy">
    update course_user_study
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=BIGINT},
      user_no = #{userNo,jdbcType=BIGINT},
      chapter_video_total = #{chapterVideoTotal,jdbcType=INTEGER},
      chapter_video_seen = #{chapterVideoSeen,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=TINYINT},
      watch_progress = #{watchProgress,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>