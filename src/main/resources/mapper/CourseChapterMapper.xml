<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aiolos.news.dao.CourseChapterMapper">
  <resultMap id="BaseResultMap" type="com.aiolos.news.pojo.CourseChapter">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="status_id" jdbcType="TINYINT" property="statusId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="chapter_desc" jdbcType="VARCHAR" property="chapterDesc" />
    <result column="is_free" jdbcType="TINYINT" property="isFree" />
    <result column="chapter_original" jdbcType="DECIMAL" property="chapterOriginal" />
    <result column="chapter_discount" jdbcType="DECIMAL" property="chapterDiscount" />
    <result column="live_status" jdbcType="TINYINT" property="liveStatus" />
    <result column="count_buy" jdbcType="INTEGER" property="countBuy" />
    <result column="count_study" jdbcType="INTEGER" property="countStudy" />
    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
    <result column="preferential_price" jdbcType="DECIMAL" property="preferentialPrice" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_face_contras" jdbcType="TINYINT" property="isFaceContras" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, status_id, sort, parent_id, course_id, chapter_name, 
    chapter_desc, is_free, chapter_original, chapter_discount, live_status, count_buy, 
    count_study, original_price, preferential_price, start_time, end_time, is_face_contras
  </sql>
  <select id="selectByExample" parameterType="com.aiolos.news.pojo.CourseChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_chapter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_chapter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aiolos.news.pojo.CourseChapterExample">
    delete from course_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aiolos.news.pojo.CourseChapter">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_chapter (id, gmt_create, gmt_modified, 
      status_id, sort, parent_id, 
      course_id, chapter_name, chapter_desc, 
      is_free, chapter_original, chapter_discount, 
      live_status, count_buy, count_study, 
      original_price, preferential_price, start_time, 
      end_time, is_face_contras)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{statusId,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, 
      #{courseId,jdbcType=BIGINT}, #{chapterName,jdbcType=VARCHAR}, #{chapterDesc,jdbcType=VARCHAR}, 
      #{isFree,jdbcType=TINYINT}, #{chapterOriginal,jdbcType=DECIMAL}, #{chapterDiscount,jdbcType=DECIMAL}, 
      #{liveStatus,jdbcType=TINYINT}, #{countBuy,jdbcType=INTEGER}, #{countStudy,jdbcType=INTEGER}, 
      #{originalPrice,jdbcType=DECIMAL}, #{preferentialPrice,jdbcType=DECIMAL}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{isFaceContras,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.aiolos.news.pojo.CourseChapter">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="chapterDesc != null">
        chapter_desc,
      </if>
      <if test="isFree != null">
        is_free,
      </if>
      <if test="chapterOriginal != null">
        chapter_original,
      </if>
      <if test="chapterDiscount != null">
        chapter_discount,
      </if>
      <if test="liveStatus != null">
        live_status,
      </if>
      <if test="countBuy != null">
        count_buy,
      </if>
      <if test="countStudy != null">
        count_study,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="preferentialPrice != null">
        preferential_price,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isFaceContras != null">
        is_face_contras,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterDesc != null">
        #{chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="isFree != null">
        #{isFree,jdbcType=TINYINT},
      </if>
      <if test="chapterOriginal != null">
        #{chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="chapterDiscount != null">
        #{chapterDiscount,jdbcType=DECIMAL},
      </if>
      <if test="liveStatus != null">
        #{liveStatus,jdbcType=TINYINT},
      </if>
      <if test="countBuy != null">
        #{countBuy,jdbcType=INTEGER},
      </if>
      <if test="countStudy != null">
        #{countStudy,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="preferentialPrice != null">
        #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isFaceContras != null">
        #{isFaceContras,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aiolos.news.pojo.CourseChapterExample" resultType="java.lang.Long">
    select count(*) from course_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=TINYINT},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.chapterName != null">
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterDesc != null">
        chapter_desc = #{record.chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.isFree != null">
        is_free = #{record.isFree,jdbcType=TINYINT},
      </if>
      <if test="record.chapterOriginal != null">
        chapter_original = #{record.chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="record.chapterDiscount != null">
        chapter_discount = #{record.chapterDiscount,jdbcType=DECIMAL},
      </if>
      <if test="record.liveStatus != null">
        live_status = #{record.liveStatus,jdbcType=TINYINT},
      </if>
      <if test="record.countBuy != null">
        count_buy = #{record.countBuy,jdbcType=INTEGER},
      </if>
      <if test="record.countStudy != null">
        count_study = #{record.countStudy,jdbcType=INTEGER},
      </if>
      <if test="record.originalPrice != null">
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.preferentialPrice != null">
        preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isFaceContras != null">
        is_face_contras = #{record.isFaceContras,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_chapter
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      status_id = #{record.statusId,jdbcType=TINYINT},
      sort = #{record.sort,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      chapter_desc = #{record.chapterDesc,jdbcType=VARCHAR},
      is_free = #{record.isFree,jdbcType=TINYINT},
      chapter_original = #{record.chapterOriginal,jdbcType=DECIMAL},
      chapter_discount = #{record.chapterDiscount,jdbcType=DECIMAL},
      live_status = #{record.liveStatus,jdbcType=TINYINT},
      count_buy = #{record.countBuy,jdbcType=INTEGER},
      count_study = #{record.countStudy,jdbcType=INTEGER},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      preferential_price = #{record.preferentialPrice,jdbcType=DECIMAL},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_face_contras = #{record.isFaceContras,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aiolos.news.pojo.CourseChapter">
    update course_chapter
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=TINYINT},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterDesc != null">
        chapter_desc = #{chapterDesc,jdbcType=VARCHAR},
      </if>
      <if test="isFree != null">
        is_free = #{isFree,jdbcType=TINYINT},
      </if>
      <if test="chapterOriginal != null">
        chapter_original = #{chapterOriginal,jdbcType=DECIMAL},
      </if>
      <if test="chapterDiscount != null">
        chapter_discount = #{chapterDiscount,jdbcType=DECIMAL},
      </if>
      <if test="liveStatus != null">
        live_status = #{liveStatus,jdbcType=TINYINT},
      </if>
      <if test="countBuy != null">
        count_buy = #{countBuy,jdbcType=INTEGER},
      </if>
      <if test="countStudy != null">
        count_study = #{countStudy,jdbcType=INTEGER},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="preferentialPrice != null">
        preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isFaceContras != null">
        is_face_contras = #{isFaceContras,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aiolos.news.pojo.CourseChapter">
    update course_chapter
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=TINYINT},
      sort = #{sort,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      course_id = #{courseId,jdbcType=BIGINT},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      chapter_desc = #{chapterDesc,jdbcType=VARCHAR},
      is_free = #{isFree,jdbcType=TINYINT},
      chapter_original = #{chapterOriginal,jdbcType=DECIMAL},
      chapter_discount = #{chapterDiscount,jdbcType=DECIMAL},
      live_status = #{liveStatus,jdbcType=TINYINT},
      count_buy = #{countBuy,jdbcType=INTEGER},
      count_study = #{countStudy,jdbcType=INTEGER},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      preferential_price = #{preferentialPrice,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_face_contras = #{isFaceContras,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>